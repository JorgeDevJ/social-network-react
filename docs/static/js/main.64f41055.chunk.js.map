{"version":3,"sources":["components/Card.jsx","instagram.svg","twitter.svg","facebook.svg","youtube.svg","up.svg","down.svg","components/Cards.jsx","components/Cardsgrid.jsx","components/Cardg.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","name","social","analytics","today","followers","className","src","alt","Cards","data","nombre","url","facebook","up","analyticsInfo","twitter","instagram","youtube","down","map","Cardsgrid","title","contTitle","logo","arrow","dataNow","Cardg","dataGrid","constTitle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64f41055.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./card.css\";\n\nconst Card = ({ name, social, analytics, today, followers }) => {\n  return (\n    <div className=\"card_container fl_center\">\n      <div className=\"cont_top_container\">\n        <img src={social} alt=\"social\" />\n        <span>{name}</span>\n      </div>\n      <div className=\"cant_follower_container\">\n        <h2>{followers}</h2>\n        <span>Followers</span>\n      </div>\n      <div className=\"cant_today_container\">\n        <img className=\"mg\" src={analytics} alt=\"followers_data\" />\n        <aside\n          className={\n            analytics === \"/static/media/up.359200b2.svg\" ? \"green\" : \"red\"\n          }\n        >\n          {today}\n        </aside>\n      </div>\n    </div>\n  );\n};\n\nCard.propTypes = {\n  social: PropTypes.string,\n  name: PropTypes.string,\n  analytics: PropTypes.string,\n  today: PropTypes.string,\n  followers: PropTypes.string,\n};\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/instagram.568b5795.svg\";","export default __webpack_public_path__ + \"static/media/twitter.a0c5f64d.svg\";","export default __webpack_public_path__ + \"static/media/facebook.8deee3e3.svg\";","export default __webpack_public_path__ + \"static/media/youtube.cad14335.svg\";","export default __webpack_public_path__ + \"static/media/up.359200b2.svg\";","export default __webpack_public_path__ + \"static/media/down.0c77426d.svg\";","import React from \"react\";\nimport Card from \"./Card\";\nimport instagram from \"../instagram.svg\";\nimport twitter from \"../twitter.svg\";\nimport facebook from \"../facebook.svg\";\nimport youtube from \"../youtube.svg\";\nimport up from \"../up.svg\";\nimport down from \"../down.svg\";\n\nconst Cards = () => {\n  const data = [\n    {\n      nombre: \"@nathanf\",\n      url: facebook,\n      analytics: up,\n      analyticsInfo: \"12 Today\",\n      followers: 1987,\n    },\n    {\n      nombre: \"@nathanf\",\n      url: twitter,\n      analytics: up,\n      analyticsInfo: \"99 Today\",\n      followers: 1044,\n    },\n    {\n      nombre: \"@realnathanf\",\n      url: instagram,\n      analytics: up,\n      analyticsInfo: \"1099 Today\",\n      followers: \"11k\",\n    },\n    {\n      nombre: \"Nathan f.\",\n      url: youtube,\n      analytics: down,\n      analyticsInfo: \"144 Today\",\n      followers: 8239,\n    },\n  ];\n\n  return (\n    <>\n      {data.map(({ url, nombre, analytics, analyticsInfo, followers }) => {\n        return (\n          <Card\n            name={nombre}\n            social={url}\n            analytics={analytics}\n            followers={followers}\n            today={analyticsInfo}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default Cards;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./card_grid.css\";\nconst Cardsgrid = ({ title, contTitle, logo, arrow, dataNow }) => {\n  return (\n    <div className=\"grid_container\">\n      <div className=\"cont_top\">\n        <p>{title}</p>\n        <img src={logo} alt=\"social\" />\n      </div>\n      <div className=\"cont_down\">\n        <p>{contTitle}</p>\n        <div className=\"data\">\n          <img className=\"mg\" src={arrow} alt=\"arrow\" />\n          <aside\n            className={\n              arrow === \"/static/media/up.359200b2.svg\" ? \"green\" : \"red\"\n            }\n          >\n            {dataNow}{\" \"}\n          </aside>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCardsgrid.propTypes = {\n  title: PropTypes.string,\n  contTitle: PropTypes.string,\n  logo: PropTypes.string,\n  arrow: PropTypes.string,\n  dataNow: PropTypes.string,\n};\n\nexport default Cardsgrid;\n","import React from \"react\";\nimport Cardsgrid from \"./Cardsgrid\";\nimport instagram from \"../instagram.svg\";\nimport twitter from \"../twitter.svg\";\nimport facebook from \"../facebook.svg\";\nimport youtube from \"../youtube.svg\";\nimport up from \"../up.svg\";\nimport down from \"../down.svg\";\nconst Cardg = () => {\n  const dataGrid = [\n    {\n      title: \"Page Views\",\n      constTitle: \"87\",\n      logo: facebook,\n      arrow: up,\n      dataNow: \"3%\",\n    },\n    {\n      title: \"Likes\",\n      constTitle: \"52\",\n      logo: facebook,\n      arrow: down,\n      dataNow: \"2%\",\n    },\n    {\n      title: \"Likes\",\n      constTitle: \"5462\",\n      logo: instagram,\n      arrow: up,\n      dataNow: \"2257%\",\n    },\n    {\n      title: \"Profile Views\",\n      constTitle: \"52k\",\n      logo: instagram,\n      arrow: up,\n      dataNow: \"1375%\",\n    },\n    {\n      title: \"Retweets\",\n      constTitle: \"117\",\n      logo: twitter,\n      arrow: up,\n      dataNow: \"303%\",\n    },\n    {\n      title: \"Likes\",\n      constTitle: \"507\",\n      logo: twitter,\n      arrow: up,\n      dataNow: \"553%\",\n    },\n    {\n      title: \"Likes\",\n      constTitle: \"107\",\n      logo: youtube,\n      arrow: down,\n      dataNow: \"19%\",\n    },\n    {\n      title: \"Total Views\",\n      constTitle: \"1407\",\n      logo: youtube,\n      arrow: down,\n      dataNow: \"12%\",\n    },\n  ];\n  return (\n    <>\n      {dataGrid.map(({ title, constTitle, logo, arrow, dataNow }) => {\n        return (\n          <Cardsgrid\n            title={title}\n            contTitle={constTitle}\n            logo={logo}\n            arrow={arrow}\n            dataNow={dataNow}\n          />\n        );\n      })}\n    </>\n  );\n};\nexport default Cardg;\n","import \"./App.css\";\nimport Cards from \"./components/Cards\";\n/* import Toggle from \"./components/Toggle\"; */\nimport Cardg from \"./components/Cardg\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"header_top\">\n        <h1>Social Content Network</h1>\n      </header>\n      <main className=\"cont\">\n        <div className=\"top\">\n          <Cards />\n        </div>\n        <header className=\"header_down\">\n          <h3>Overview - Today</h3>\n        </header>\n        <div className=\"down\">\n          <Cardg />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './default.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}